name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Job test dikomentari
  # test:
  #   runs-on: ubuntu-latest

  #   services:
  #     mysql:
  #       image: mysql:5.7
  #       env:
  #         MYSQL_DATABASE: stockhub
  #         MYSQL_USER: stockhubuser
  #         MYSQL_PASSWORD: stockhubpassword
  #         MYSQL_ROOT_PASSWORD: rootpassword
  #       options: >-
  #         --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
  #         --health-interval=10s
  #         --health-timeout=5s
  #         --health-retries=3
  #       ports:
  #         - 3306:3306

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Install Dependencies
  #       run: composer install --no-interaction --prefer-dist

  #     - name: Configure Testing Environment
  #       run: |
  #         cp .env.example .env
  #         sed -i 's/DB_DATABASE=.*/DB_DATABASE=stockhub/' .env
  #         sed -i 's/DB_USERNAME=.*/DB_USERNAME=stockhubuser/' .env
  #         sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=stockhubpassword/' .env

  #     - name: Run Database Migrations
  #       env:
  #         DB_CONNECTION: mysql
  #         DB_HOST: 127.0.0.1
  #         DB_PORT: 3306
  #         DB_DATABASE: stockhub
  #         DB_USERNAME: stockhubuser
  #         DB_PASSWORD: stockhubpassword
  #       run: php artisan migrate --force

  deploy:
    runs-on: ubuntu-latest

    steps:
      # Langkah debugging untuk memeriksa apakah secret SSH key tersedia
      - name: Debug Secret
        run: echo "Checking SSH Key exists"
        env:
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # Menyimpan SSH key ke file untuk debugging
      - name: Save Debug Key to File
        run: echo "$SSH_KEY" > debug_key.txt
              
      # Menampilkan direktori saat ini
      - name: Print Current Directory
        run: pwd

      # Melist file dalam direktori saat ini
      - name: List Files in Current Directory
        run: ls -la

      # Mengambil kode dari repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Menginstal sshpass untuk koneksi SSH dengan password
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      # Verifikasi apakah sshpass berhasil diinstal
      - name: Verify sshpass Installation
        run: sshpass -V

      # Menggunakan sshpass untuk proses deploy
      - name: Deploy to VPS using Password
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          # Tes koneksi SSH dengan password
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@217.15.160.69 "echo 'Connected using password'"
          
          # Copy file ke VPS
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no -r ./ root@217.15.160.69:/pso/stock-hub/
          
          # Jalankan perintah docker-compose di VPS
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@217.15.160.69 << EOF
            cd /pso/stock-hub/
            docker-compose down
            docker-compose up -d --build
          EOF
