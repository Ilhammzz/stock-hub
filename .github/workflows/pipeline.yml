name: Deploy to VPS

on:
  # Workflow ini akan berjalan saat ada push ke branch master
  push:
    branches:
      - master

jobs:
  # Job test dikomentari
  # test:
  #   runs-on: ubuntu-latest

  #   services:
  #     mysql:
  #       image: mysql:5.7
  #       env:
  #         MYSQL_DATABASE: stockhub
  #         MYSQL_USER: stockhubuser
  #         MYSQL_PASSWORD: stockhubpassword
  #         MYSQL_ROOT_PASSWORD: rootpassword
  #       options: >-
  #         --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
  #         --health-interval=10s
  #         --health-timeout=5s
  #         --health-retries=3
  #       ports:
  #         - 3306:3306

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Install Dependencies
  #       run: composer install --no-interaction --prefer-dist

  #     - name: Configure Testing Environment
  #       run: |
  #         cp .env.example .env
  #         sed -i 's/DB_DATABASE=.*/DB_DATABASE=stockhub/' .env
  #         sed -i 's/DB_USERNAME=.*/DB_USERNAME=stockhubuser/' .env
  #         sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=stockhubpassword/' .env

  #     - name: Run Database Migrations
  #       env:
  #         DB_CONNECTION: mysql
  #         DB_HOST: 127.0.0.1
  #         DB_PORT: 3306
  #         DB_DATABASE: stockhub
  #         DB_USERNAME: stockhubuser
  #         DB_PASSWORD: stockhubpassword
  #       run: php artisan migrate --force

  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step: Checkout repository
      # Mengambil kode dari repository GitHub ke runner
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step: Install sshpass
      # Menginstal sshpass untuk autentikasi SCP tanpa interaksi manual
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      # Step: Wait for File System Stability
      # Memberikan waktu untuk memastikan file system stabil sebelum membuat arsip
      - name: Wait for File System Stability
        run: sleep 2

      # Step: Archive Files for Deployment
      # Membuat file arsip dengan mengabaikan direktori `.git` dan file sementara
      - name: Archive Files for Deployment
        run: tar --exclude='.git' --exclude='tmp' --warning=no-file-changed -czf stock-hub.tar.gz .

      # Step: Deploy to VPS
      # Menggunakan sshpass untuk mentransfer file arsip ke server VPS dan menjalankan docker-compose
      - name: Deploy to VPS
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }} # Mengambil password SSH dari GitHub Secrets
        run: |
          # Mengunggah file arsip ke server VPS
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no stock-hub.tar.gz root@217.15.160.69:/tmp/

          # Mengekstrak file arsip dan menjalankan aplikasi di server VPS
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@217.15.160.69 << EOF
            # Pindah ke direktori aplikasi
            cd /pso/stock-hub/

            # Mengekstrak file arsip dari /tmp ke direktori saat ini
            tar -xzf /tmp/stock-hub.tar.gz -C .

            # Menjalankan ulang aplikasi menggunakan docker-compose
            docker-compose down
            docker-compose up -d --build
          EOF
