name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: stockhub
          MYSQL_USER: stockhubuser
          MYSQL_PASSWORD: stockhubpassword
          MYSQL_ROOT_PASSWORD: rootpassword
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Setup PHP Environment
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, pdo_mysql, bcmath
          ini-values: post_max_size=256M, upload_max_filesize=256M
          coverage: none

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Configure Testing Environment
        run: |
          cp .env.example .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=stockhub/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=stockhubuser/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=stockhubpassword/' .env

      - name: Run Database Migrations and Seed
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: stockhub
          DB_USERNAME: stockhubuser
          DB_PASSWORD: stockhubpassword
        run: |
          php artisan migrate --force
          php artisan db:seed
  
      - name: Install Chromedriver
        run: php artisan dusk:chrome-driver
  
      - name: Generate APP_KEY
        run: php artisan key:generate

      - name: Run Unit Tests (PHPUnit)
        run: php artisan test

      - name: Run Static Analysis (PHPStan)
        run: ./vendor/bin/phpstan analyse --level=0 app

      - name: Run PHP_CodeSniffer Fixer
        run: ./vendor/bin/phpcbf --standard=PSR12 app

      - name: Run PHP_CodeSniffer
        run: ./vendor/bin/phpcs --standard=PSR12 app

      - name: Install Laravel Dusk
        run: |
          composer require --dev laravel/dusk
          php artisan dusk:install
      
      - name: Skip Laravel Dusk in CI
        if: env.CI == 'true'
        run: echo "Skipping Laravel Dusk tests in CI/CD pipeline."


      - name: Run End-to-End Tests (Laravel Dusk)
        env:
          APP_ENV: testing
        run: |
          php artisan key:generate
          php artisan dusk --no-tty

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        env:
          SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
        run: |
          echo "$SSH_KEY" > /tmp/vps_key
          chmod 600 /tmp/vps_key
          scp -o StrictHostKeyChecking=no -i /tmp/vps_key -r * user@your_vps_ip:/path/to/project || exit 1
          ssh -o StrictHostKeyChecking=no -i /tmp/vps_key user@your_vps_ip << EOF || exit 1
            cd /path/to/project
            docker-compose down
            docker-compose up -d --build
          EOF
