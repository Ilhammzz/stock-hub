name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - ilham
  pull_request:
    branches:
      - ilham

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: stockhub
          MYSQL_USER: stockhubuser
          MYSQL_PASSWORD: stockhubpassword
          MYSQL_ROOT_PASSWORD: rootpassword
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install PHP Extensions
        run: sudo apt-get install -y php-mysql

      - name: Wait for MySQL to be Ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is ready."
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Configure Testing Environment
        run: |
          cp .env.example .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=stockhub/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=stockhubuser/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=stockhubpassword/' .env
          sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env

      - name: Debug MySQL Connection
        run: |
          mysql -h 127.0.0.1 -u stockhubuser -pstockhubpassword -e "SHOW DATABASES;"

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Generate APP_KEY
        run: php artisan key:generate

      - name: Run Database Migrations and Seed
        run: |
          php artisan migrate --force
          php artisan db:seed

      - name: Remove Existing Chrome Versions
        run: sudo apt-get remove -y google-chrome-stable || true

      - name: Install Google Chrome 114
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -O google-chrome-stable_114.deb
          sudo dpkg -i google-chrome-stable_114.deb || sudo apt-get -f install -y
          google-chrome --version

      - name: Debug Google Chrome Version
        run: google-chrome --version

      - name: Install Laravel Dusk ChromeDriver
        run: php artisan dusk:chrome-driver

      - name: Download Chromedriver for Chrome 131
        run: |
          curl -s -o chromedriver.zip https://storage.googleapis.com/chrome-for-testing-public/131.0.6778.87/linux64/chromedriver-linux64.zip
          unzip -o chromedriver.zip -d ./vendor/laravel/dusk/bin/
          chmod +x ./vendor/laravel/dusk/bin/chromedriver-linux
      
      - name: Verify Chromedriver Path
        run: ls -la ./vendor/laravel/dusk/bin/

      - name: Run Unit Tests (PHPUnit)
        run: php artisan test

      - name: Run Static Analysis (PHPStan)
        run: ./vendor/bin/phpstan analyse --level=0 app

      - name: Run PHP_CodeSniffer Fixer
        run: ./vendor/bin/phpcbf --standard=PSR12 app
        continue-on-error: true

      - name: Run PHP_CodeSniffer
        run: ./vendor/bin/phpcs --standard=PSR12 app

      - name: Run Laravel Dusk Tests
        env:
          APP_ENV: testing
        run: php artisan dusk

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        env:
          SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
        run: |
          echo "$SSH_KEY" > /tmp/vps_key
          chmod 600 /tmp/vps_key
          scp -o StrictHostKeyChecking=no -i /tmp/vps_key -r . root@217.15.160.69:/pso/stock-hub/
          ssh -o StrictHostKeyChecking=no -i /tmp/vps_key root@217.15.160.69 << EOF
            cd /pso/stock-hub/
            docker-compose down
            docker-compose up -d --build
          EOF
