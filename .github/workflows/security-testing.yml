name: Run Security Testing

on:
  push:
    branches:
      - security-testing
  pull_request:
    branches:
      - security-testing

jobs:
  security-testing:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Setup PHP environment (PHP 8.1.29)
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1.29'
          extensions: mbstring, bcmath, pdo_mysql, zip
          ini-values: post_max_size=256M, upload_max_filesize=256M

      # 3. Setup Environment
      - name: Setup Environment
        run: cp .env.example .env || echo "No .env.example file found."

      # 4. Install Composer dependencies
      - name: Install Composer Dependencies
        run: |
          composer install --prefer-dist --no-progress --no-suggest

      # 5. Run Database Migrations (Optional)
      - name: Run Database Migrations
        run: php artisan migrate --force || echo "No database migrations needed."

      # 6. Check if target is reachable (using curl)
      - name: Check Target Availability
        run: |
          curl -I https://217.15.160.69:8081 || echo "Target not reachable"

      # 7. Run OWASP ZAP Security Scan
      - name: Run OWASP ZAP Security Scan (Using Docker)
        run: |
          echo "Starting OWASP ZAP Security Scan..."
          # Ensure Docker is available
          docker --version || echo "Docker not found on this machine"
          
          # Pull ZAP Docker image if not already available
          docker pull owasp/zap2docker-stable

          # Run OWASP ZAP scan using Docker
          docker run -t owasp/zap2docker-stable zap-baseline.py -t https://217.15.160.69:8081

      # 8. Verify Pest installation and check the path
      - name: Check Vendor Bin Directory
        run: ls -l ./vendor/bin/

      # 9. Run Tests with Pest
      - name: Run Tests with Pest
        run: |
          if [ -f "./vendor/bin/pest" ]; then
            ./vendor/bin/pest
          else
            echo "Pest binary not found, running with PHPUnit"
            ./vendor/bin/phpunit
          fi

      # 10. Debugging Steps
      - name: Check PHP Info
        run: php -i

      - name: Check Pest Version
        run: |
          if [ -f "./vendor/bin/pest" ]; then
            ./vendor/bin/pest --version
          else
            echo "Pest not installed, running PHPUnit"
          fi

      - name: Check Composer Version
        run: composer --version

      - name: List Installed Composer Packages
        run: composer show
